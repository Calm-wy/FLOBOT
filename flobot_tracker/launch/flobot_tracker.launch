<launch>
  <!-- HOKUYO UTM-30LX used in UOL's platform -->
  <!-- <node pkg="hokuyo_node" type="hokuyo_node" name="hokuyo_node" output="screen"/> -->
  
  <!-- SICK S300 driver for the FLOBOT -->
  <!-- driver node here -->
  
  <!-- OpenNI2 Driver for ASUS 0601 -->
  <include file="$(find openni2_launch)/launch/openni2.launch">
    <arg name="depth_registration" value="true"/>
    <arg name="color_depth_synchronization" value="true"/>
    <arg name="publish_tf" value="false"/>
  </include>
  
  <!-- Velodyne VLP-16 Driver -->
  <node pkg="nodelet" type="nodelet" name="velodyne_nodelet_manager" args="manager" output="screen"/>
  
  <node pkg="nodelet" type="nodelet" name="driver_nodelet" args="load velodyne_driver/DriverNodelet velodyne_nodelet_manager" output="screen">
    <param name="model" value="VLP16"/>
    <param name="pcap" value=""/>
    <param name="frame_id" value="velodyne"/>
  </node>
  
  <node pkg="nodelet" type="nodelet" name="cloud_nodelet" args="load velodyne_pointcloud/CloudNodelet velodyne_nodelet_manager" output="screen">
    <param name="calibration" value="$(find flobot_tracker)/config/vlp16.yaml"/>
    <param name="min_range" value="0.4"/>
    <param name="max_range" value="130.0"/>
  </node>
  
  <!-- STRANDS Ground Plane Estimation -->
  <include file="$(find ground_plane_estimation)/launch/ground_plane_estimated.launch">
    <arg name="camera_namespace" value="/camera"/>
  </include>
  
  <!-- STRANDS Upper Body Detector -->
  <include file="$(find upper_body_detector)/launch/upper_body_detector.launch">
    <arg name="camera_namespace" value="/camera"/>
  </include>
  
  <!-- ROS leg detector -->
  <include file="$(find detector_msg_to_pose_array)/launch/to_pose_array.launch"/>
  <node pkg="leg_detector" type="leg_detector" name="leg_detector" args="scan:=scan $(find leg_detector)/config/trained_leg_detector.yaml" output="screen">
    <param name="fixed_frame" type="string" value="odom"/>
    <param name="publish_leg_markers" type="bool" value="false"/>
    <param name="publish_people_markers" type="bool" value="true"/>
  </node>
  
  <!-- FLOBOT 3D Object Detector -->
  <node pkg="object3d_detector" type="object3d_detector" name="object3d_detector" output="screen" respawn="true">
    <param name="print_fps" type="bool" value="false"/>
    <param name="model_file_name" type="string" value="$(find object3d_detector)/libsvm/pedestrian.model"/>
    <param name="range_file_name" type="string" value="$(find object3d_detector)/libsvm/pedestrian.range"/>
  </node>
  
  <!-- FLOBOT RGB-D Leg Detector -->
  <node pkg="rgbd_leg_detector" type="rgbd_leg_detector" name="rgbd_leg_detector" output="screen" respawn="true"/>
  
  <!-- NBellotto's Bayes People Tracker -->
  <rosparam command="load" file="$(find flobot_tracker)/config/detectors.yaml"/>
  <node pkg="bayes_people_tracker" type="bayes_people_tracker" name="bayes_people_tracker" output="screen" respawn="true">
    <param name="target_frame" type="string" value="odom"/>
  </node>
  
  <!-- FLOBOT tf -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_velodyne" args="-0.043 0 0.836 0 0 0 base_link velodyne 100"/>
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_camera" args="0.222 0.015 0.582 -1.5708 0 -1.5708 base_link camera_rgb_optical_frame 100"/>
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.267 0 0.151 0 0 3.1415 base_link laser 100"/>
  
  <!-- Rviz for UOL's platform -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find flobot_tracker)/launch/flobot_tracker.rviz"/>
</launch>
